#define trigPin 12
#define echoPin 13
//temp led to display the "state" of the system
#define redPin 1
#define greenPin 3
//left motor
#define motorPinA1 9
#define motorPinA2 8
//right motor
#define motorPinB1 7
#define motorPinB2 6
//line sensors
#define sensorPinLeft 2
#define sensorPinRight 4


int sensorValueLeft, sensorValueRight;


void setup(){
  
 pinMode(trigPin, OUTPUT);
 pinMode(echoPin, INPUT);
  
 pinMode(motorPinA1, OUTPUT);
 pinMode(motorPinA2, OUTPUT);
 pinMode(motorPinB1, OUTPUT);
 pinMode(motorPinB2, OUTPUT);
  
 pinMode(redPin, OUTPUT);
 pinMode(greenPin, OUTPUT);

 pinMode(sensorPinLeft,INPUT);
 pinMode(sensorPinRight,INPUT);
}


void loop(){
  
 long duration, distance;
 
 digitalWrite(trigPin, LOW);    //pinging for obstacle
 delayMicroseconds(2);
 digitalWrite(trigPin, HIGH);
 delayMicroseconds(10); 
 digitalWrite(trigPin, LOW);
  
 duration = pulseIn(echoPin, HIGH);    //calculating the distance
 distance = duration/58.2;

 if (distance < 50){        //obstatcle too close
   stop();
 }   
  
  if (distance > 50){
   	sensorValueLeft = digitalRead(sensorPinLeft);
 	sensorValueRight = digitalRead(sensorPinRight);
 
  	if(sensorValueLeft == HIGH && sensorValueRight == HIGH){
  		forward();
  	}
  	else if(sensorValueLeft == LOW && sensorValueRight == HIGH){
    	leftSlow();
  	} 
  	else if(sensorValueLeft == HIGH && sensorValueRight == LOW){
    	rightSlow();
  	} 
  	else if(sensorValueLeft == LOW && sensorValueRight == LOW){
    	forward();
    }
  	
  }
  delay(500);
}


int forward(){
  analogWrite(motorPinA1, 50);
  analogWrite(motorPinB1, 50);
  digitalWrite(redPin, LOW);
  digitalWrite(greenPin, HIGH);
}

int stop(){
  analogWrite(motorPinA1, 0);
  analogWrite(motorPinB1, 0);
  digitalWrite(redPin, HIGH);
  digitalWrite(greenPin, LOW);
}

int left(){
  analogWrite(motorPinA1, 20);
  analogWrite(motorPinB1, 30);
}
int leftFast(){
  analogWrite(motorPinA1, 10);
  analogWrite(motorPinB1, 30);
}

int leftSlow(){
  analogWrite(motorPinA1, 25);
  analogWrite(motorPinB1, 30);
  digitalWrite(redPin, HIGH);
  digitalWrite(greenPin, HIGH);
}

int right(){
  analogWrite(motorPinA1, 30);
  analogWrite(motorPinB1, 20);
}

int rightFast(){
  analogWrite(motorPinA1, 30);
  analogWrite(motorPinB1, 10);
}

int rightSlow(){
  analogWrite(motorPinA1, 30);
  analogWrite(motorPinB1, 25);
  digitalWrite(redPin, LOW);
  digitalWrite(greenPin, LOW);
}